apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    kasten/backup: "true"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/controller: main
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/controller: main
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ .Release.Name }}
      automountServiceAccountToken: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 150
        runAsNonRoot: true
      initContainers:
        - name: config-setup
          image: busybox:1.37
          command: ['sh', '-c', 'chown 1000:150 /app/.config']
          volumeMounts:
          - mountPath: /app/.config
            name: app-config
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
      containers:
        - env:
          - name: TZ
            value: {{ .Values.cluster.timezone }}
          - name: DATABASE_URL
            value: postgresql://litellm:litellm@db.litellm.svc.cluster.local/litellm
          - name: REDIS_HOST
            value: {{ .Release.Name }}-redis
          - name: REDIS_PORT
            value: "6379"
          {{ range $key, $value := .Values.pods.main.env }}- name: {{ $key }}
            value: {{ $value }}
          {{ end }}
          image: {{ .Values.pods.main.image.repository }}:{{ .Values.pods.main.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
          - "--config"
          - "/app/config.yaml"
          name: main
          volumeMounts:
          - mountPath: /app/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /.cache
            name: cache
          - mountPath: /.npm
            name: npm
          - mountPath: /app/.config
            name: app-config
          resources:
            requests:
              cpu: '2'
              memory: 830Mi
            limits:
              cpu: '4'
              memory: 1Gi
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
        - name: cache
          emptyDir: {}
        - name: npm
          emptyDir: {}
        - name: app-config
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-config
